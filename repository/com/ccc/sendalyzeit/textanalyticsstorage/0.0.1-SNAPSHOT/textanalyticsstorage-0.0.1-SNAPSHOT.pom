<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>textanalyticsstorage</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>textanalyticsstorage Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<parent>
		<groupId>com.ccc.sendalyzeit</groupId>
		<artifactId>textanalytics</artifactId>
		<version>0.0.1</version>
	</parent>

	<repositories>
		<repository>
			<id>sendalyzeit</id>
			<url>https://raw.github.com/agibsonccc/mvnrepo/master/repository</url>
		</repository>
		<repository>
			<id>bitbucket4</id>
			<url>https://bitbucket.org/agibsonccc/mvnrepo/raw/b3eac966485d58797536ced2b51c8d379f44f4e9/repository</url>
		</repository>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>
	<build>
		<finalName>textanalyticsstorage</finalName>
		<plugins>
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1-alpha-2</version>
				<executions>
					<execution>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<copyright>2013, Sendalyze.it</copyright>
					<distribution>Sendalyze.it textanalytics</distribution>
					<group>Application/Collectors</group>
					<icon>src/main/resources/icon.gif</icon>
					<packager>SWWDC</packager>
					<prefix>/usr/share</prefix>
					<defineStatements>
						<defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
					</defineStatements>
					<mappings>

						<mapping>
							<directory>/var/lib</directory>
							<filemode>750</filemode>
							<username>textanalytics</username>
							<groupname>textanalytics</groupname>
							<sources>
								<source>
									<location>lib/jetty-runner.jar</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>/var/lib/textanalytics</directory>
							<filemode>750</filemode>
							<username>textanalytics</username>
							<groupname>textanalytics</groupname>
							<sources>
								<source>
									<location>target/</location>
								</source>
								<softlinkSource>
									<location>target/textanalyticsstorage.war</location>
									<destination>/var/lib/textanalyticsstorage.war</destination>
								</softlinkSource>
							</sources>
						</mapping>
						<mapping>
							<directory>/etc/textanalytics</directory>
							<configuration>true</configuration>
							<filemode>640</filemode>
							<username>textanalytics</username>
							<groupname>textanalytics</groupname>
							<sources>
								<source>
									<location>conf</location>
								</source>
							</sources>
						</mapping>
						<mapping>
							<directory>/usr/bin</directory>
							<configuration>true</configuration>
							<filemode>640</filemode>
							<username>textanalytics</username>
							<groupname>textanalytics</groupname>

							<sources>
								<source>
									<location>bin</location>
								</source>
								<softlinkSource>
									<location>/usr/bin/textanalyticsstart.sh</location>
									<destination>start.sh</destination>
								</softlinkSource>
								<softlinkSource>
									<location>/usr/bin/textanalyticsrun.sh</location>
									<destination>run.sh</destination>
								</softlinkSource>
							</sources>
						</mapping>

					</mappings>
					<preinstallScriptlet>
						<script>echo "installing now"</script>
					</preinstallScriptlet>
					<postinstallScriptlet>
						<scriptFile>src/main/scripts/postinstall</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>
					<preremoveScriptlet>
						<scriptFile>src/main/scripts/preremove</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>
				</configuration>
			</plugin> -->

			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.0.0.M1</version>
				<configuration>
					<server>cloudfoundry</server>
					<target>http://api.cloudfoundry.com</target>
					<url>semanticanalytics.cloudfoundry.com</url>
					<memory>2048</memory>
				</configuration>

			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.0.RC5</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>forexwidgets</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
						redeployment -->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/</contextPath>

					</webAppConfig>
				</configuration>
			</plugin>

		</plugins>
	</build>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<cccframework.version>1.1</cccframework.version>
		<slf4j.version>1.6.6</slf4j.version>
		<logback.version>1.0.7</logback.version>
		<jersey.version>1.9</jersey.version>
		<spring.version>3.1.2.RELEASE</spring.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>edu.stanford.nlp</groupId>
				<artifactId>stanford-corenlp</artifactId>
				<version>1.3.3</version>
			</dependency>
			<dependency>
				<groupId>edu.stanford.nlp</groupId>
				<artifactId>stanford-corenlp</artifactId>
				<version>1.3.3</version>
				<classifier>models</classifier>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>1.0.1.Final</version>
			</dependency>
			<!-- Log back -->

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>


			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>net.arnx</groupId>
			<artifactId>jsonic</artifactId>
			<version>1.2.11</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-named-entity</artifactId>
			<version>0.6.3</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-ml-crfsuite</artifactId>
			<version>0.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-type-system</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-syntax</artifactId>
			<version>0.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-token</artifactId>
			<version>0.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-berkeleyparser</artifactId>
			<version>0.2.1</version>
		</dependency>
		<dependency>
			<groupId>jaws</groupId>
			<artifactId>jaws</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>4.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.cleartk</groupId>
			<artifactId>cleartk-semantic-roles</artifactId>
			<version>0.6.2</version>
		</dependency>
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
		</dependency>
		<!-- Log back -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>


		<!-- SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>



		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>




		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
		</dependency>


		<dependency>
			<groupId>org.maltparser</groupId>
			<artifactId>maltparser</artifactId>
			<version>1.7.2</version>
		</dependency>



		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>textanalytics-core</artifactId>
			<version>0.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>quicksearch-model</artifactId>
			<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>com.ccc</groupId>
			<artifactId>ccc-util</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>3.0.0.Final-redhat-1</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>reader</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client-gson</artifactId>
			<version>1.13.1-beta</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.basho.riak</groupId>
			<artifactId>riak-client</artifactId>
			<version>1.0.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.0</version>
		</dependency>

		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>dbpedia</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>solr-client</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.ccc.sendalyzeit</groupId>
			<artifactId>wordnet</artifactId>
			<version>0.0.1</version>
		</dependency>
	</dependencies>
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>repository.springframework.maven.milestone</id>
			<name>Spring Framework Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</pluginRepository>

	</pluginRepositories>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'webapps' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>semanticanalytics</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>webapps</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
